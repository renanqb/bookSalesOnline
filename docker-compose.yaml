version: '3.4'

services:

  app:
    build: .
    ports:
      - "8088:8081"
    volumes:
      - myapp:/app
    depends_on:
      - postgres
      - localstack
      - redis
    networks:
      - booksalesonline-network

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    environment:
      - SERVICES=s3
      - DEBUG=1
      - LOCALSTACK_HOSTNAME=localhost
      - AWS_DEFAULT_REGION=sa-east-1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DATA_DIR=/tmp/localstack/data
    ports:
      - "4566:4566"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./localstack/aws_s3_create_bucket.sh:/docker-entrypoint-initaws.d/create_bucket.sh

  postgres:
    image: postgres:15.2
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=#P0stgr3sP@ss
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5438:5432'
    volumes:
      # copy the sql script to create tables
      - ./localstack/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - booksalesonline-network

  pgadmin:
    image: dpage/pgadmin4:6.20
    environment:
      PGADMIN_DEFAULT_EMAIL: "renanvianamarcelino@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin-pass"
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - booksalesonline-network

  redis:
    image: redis:7.0.11
    restart: always
    ports:
      - '6379:6379'
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis:/data
    networks:
      - booksalesonline-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=qwerty
    ports:
      - "16544:8081"
    depends_on:
      - redis
    networks:
      - booksalesonline-network

networks:
  booksalesonline-network:
    driver: bridge

volumes:
  redis:
    driver: local
  myapp:
    driver: local